from django.db import DatabaseError, models
from django.utils import timezone
from account.models import CustomUser
from comment.models import Comment
import logging
logger = logging.getLogger('django')

class NotificationManager(models.Manager):
    def create(self, comment):
        try:
            print(comment.author)
            text = None
            if comment.user.display_name:
                text = f'{comment.user.display_name} commented on a post titled f{comment.post.title}'
            else:
                text = f'{comment.user.first_name} {comment.user.last_name} commented on a post titled f{comment.post.title}'
            notification = self.model(

                comment=comment,
                user=comment.user,
                text=text
            )

            notification.save()
        except DatabaseError:
            logger.error('Unable to create a notification for a comment.')



class Notification(models.Model):

    objects: NotificationManager = NotificationManager()

    created_at = models.DateTimeField(default=timezone.now)
    updated_at = models.DateTimeField(default=timezone.now)
    text = models.CharField(max_length=100)
    comment = models.ForeignKey(
    'comment.Comment',
    on_delete=models.CASCADE,
    related_name='notification_comments'
)
    user = models.ForeignKey(
    'account.CustomUser',
    on_delete=models.CASCADE,
    related_name='notification_user'
)
